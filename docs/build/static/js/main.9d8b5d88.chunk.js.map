{"version":3,"sources":["service/Service.js","pages/components/table-data/Tabledata.jsx","pages/components/Earthquakes.jsx","pages/components/modal/TestDetail.jsx","pages/components/Test.jsx","pages/components/Analytics.jsx","pages/Homepage.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["fetchDataset","axios","get","Tabledata","props","console","log","data","columns","label","field","sort","width","rows","striped","bordered","small","Earthquakes","isEmpty","Object","entries","length","state","this","active","loader","Component","TestDetail","componentDidMount","testEuklid","group","filter","e","min","values","setState","findedGroup","createCard","type","icon","Header","title","subTitle","statusColor","className","body","prop","Test","euklid","middle","serious","handleChange","event","target","name","value","openAddModal","eventDataForTalkers","handleOpenModal","showModal","handleCloseModal","findZScores","smallLatitudes","mag","map","element","latitude","smallLongitudes","longitude","smallDepths","depth","smlatitudesScore","smlongitudesScore","smdepthsScore","mlatitudesScore","mlongitudesScore","mdepthsScore","selatitudesScore","selongitudesScore","sedepthsScore","smLatitudeScore","smLongitudeScore","smDepthScore","mLatitudeScore","mLongitudeScore","mDepthScore","seLatitudeScore","seLongitudeScore","seDepthScore","calculate","i","Math","sqrt","pow","number","bDepthScore","Group","Input","placeholder","position","onChange","color","style","float","onClick","isOpen","onRequestClose","modalStyles","ariaHideApp","contentLabel","createForm","content","top","left","right","bottom","marginRight","transform","height","Array","prototype","groupBy","reduce","groups","item","val","push","Analytics","filterData","componentDidUpdate","locationBasedGroup","locationBased","x","y","handleZoom","domain","selectedDomain","handleBrush","zoomDomain","containerComponent","getDerivedStateFromProps","Homepage","route","location","Service","then","res","Item","Row","cards","deck","Col","md","offset","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d8b5d88.chunk.js","sourcesContent":["import axios from 'axios';\n// let BASE_URL = 'https://baykatre.com/earthquake-dataset.json'\nlet BASE_URL_NEW = 'https://baykatre.com/csvjson.json'\nclass Service {\n    \n    fetchDataset = () => {\n        return axios.get(BASE_URL_NEW);\n    }\n}\n\nexport default new Service();","import React from 'react'\nimport { MDBDataTable } from 'mdbreact';\n\nconst Tabledata = props => {\n    console.log(props)\n    const data = {\n      columns: [\n        {\n          label: 'ID',\n          field: 'id',\n          sort: 'asc',\n          width: 50\n        },\n        {\n          label: 'Location',\n          field: 'location',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Mag',\n          field: 'mag',\n          sort: 'asc',\n          width: 50\n        },\n        {\n          label: 'Latitude',\n          field: 'latitude',\n          sort: 'asc',\n          width: 50\n        },\n        {\n          label: 'Longitude',\n          field: 'longitude',\n          sort: 'asc',\n          width: 50\n        },\n        {\n          label: 'Depth',\n          field: 'depth',\n          sort: 'asc',\n          width: 100\n        }\n        ,\n        {\n          label: 'Date',\n          field: 'date',\n          sort: 'asc',\n          width: 50\n        },\n        {\n          label: 'Time',\n          field: 'time',\n          sort: 'asc',\n          width: 50\n        }\n          ],\n      rows: props.data\n    };\n    if(data.rows === [])\n      return <></>\n    else\n      return (\n        <MDBDataTable\n          striped\n          bordered\n          small\n          data={data}\n        />\n    );\n}\nexport default Tabledata\n","import React, { Component } from 'react'\nimport './Earthquakes.scss'\nimport Tabledata from './table-data/Tabledata'\nimport { Dimmer } from 'tabler-react'\n\nclass Earthquakes extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             \n        }\n    }\n    isEmpty = (data) => {\n        if(Object.entries(data).length)\n            return 0\n        else\n            return 1\n    }\n    \n    render() {\n        const { data } = this.props\n        console.log(data)\n        return (\n            <Dimmer active={this.isEmpty(data)} loader>\n                <Tabledata data={data}/>\n            </Dimmer>\n        )\n    }\n}\nexport default Earthquakes\n","import React, { Component } from 'react'\nimport { Container, Page, Card, Alert } from 'tabler-react'\nimport './test-detail.css'\nimport { min } from 'simple-statistics'\n\nclass TestDetail extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             findedGroup: ''\n        }\n    }\n    static getDerivedStateFromProps(prop, state){\n        return prop\n    }\n    componentDidMount = () => {\n        const { testEuklid } = this.state\n        let group = Object.entries(testEuklid).filter(e => {\n            if(e[1] === min(Object.values(testEuklid)))\n                return e[0]\n        })[0][0]\n        console.log(group)\n        console.log(testEuklid)\n        this.setState({findedGroup: group})\n    }\n    createCard = () => {\n        const { findedGroup } = this.state\n        if(findedGroup === 'small')\n            return (\n                <Alert type=\"info\" icon=\"check\">\n                    Girilen verilere göre bu bölgede <strong>küçük</strong> ölçekli bir deprem beklenmektedir.\n                </Alert>\n            )\n        else if(findedGroup === 'middle')\n            return (\n                <Alert type=\"secondary\" icon=\"bell\">\n                    Girilen verilere göre bu bölgede <strong>orta</strong> ölçekli bir deprem beklenmektedir.\n                </Alert>\n            )\n        else if(findedGroup === 'serious')\n            return (\n                <Alert type=\"danger\" icon=\"alert-triangle\">\n                    Girilen verilere göre bu bölgede <strong>ciddi</strong> ölçekli bir deprem beklenmektedir.\n                </Alert>\n            )\n    }\n    render() {\n        return (\n            <Container>\n                <Page.Header\n                    title=\"Test Sonuçları\"\n                    subTitle=\"\"\n                />\n                <Card\n                title=\"Veriler\"\n                statusColor=\"cyan\"\n                className=\"card-test\"\n                body={this.createCard()}\n                />\n            </Container>\n        )\n    }\n}\nexport default TestDetail\n","import React, { Component } from 'react'\nimport { Form, Button } from 'tabler-react'\nimport { number } from 'prop-types'\n// import { min } from 'simple-statistics'\nimport ReactModal from 'react-modal';\nimport TestDetail from './modal/TestDetail';\nimport './test.css'\n\nclass Test extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             data: [],\n             latitude: number,\n             longitude: number,\n             depth: number,\n             bDepthScore: [],\n             showModal: false,\n             testEuklid: []\n        }\n    }\n    smLatitudeScore\n    smLongitudeScore\n    smDepthScore\n    mLatitudeScore\n    mLongitudeScore\n    mDepthScore\n    seLatitudeScore\n    seLongitudeScore\n    seDepthScore\n    euklid = {\n        small: 999999999999,\n        middle: 99999999999,\n        serious: 99999999999,\n    }\n    static getDerivedStateFromProps(props, state){\n        return props\n    }\n    handleChange = (event) => {\n        this.setState({[event.target.name]: event.target.value});\n    }\n    openAddModal = (event) => {\n        this.setState({ eventDataForTalkers: event })\n        this.handleOpenModal()\n    }\n    handleOpenModal = () => {\n        this.setState({ showModal: true });\n    }\n    handleCloseModal = () => {\n        this.setState({ showModal: false });\n    }\n    componentDidMount = () => {\n        this.findZScores();\n    }\n    findZScores = () => {\n        let smallLatitudes = this.state.data.filter(e => e.mag>1 && e.mag<5).map(element => {\n            return element.latitude\n        })\n        // smallLatitudes = smallLatitudes.map(e => e+=min(smallLatitudes))\n        let smallLongitudes = this.state.data.filter(e => e.mag>1 && e.mag<5).map(element => {\n            return element.longitude\n        })\n        // smallLongitudes = smallLongitudes.map(e => e+=min(smallLongitudes))\n        let smallDepths = this.state.data.filter(e => e.mag>1 && e.mag<5).map(element => {\n            return element.depth\n        })\n        // smallDepths = smallDepths.map(e => e+=min(smallDepths))\n        let middleLatitudes = this.state.data.filter(e => e.mag>5 && e.mag<7).map(element => {\n            return element.latitude\n        })\n        // middleLatitudes = middleLatitudes.map(e => e+=min(middleLatitudes))\n        let middleLongitudes = this.state.data.filter(e => e.mag>5 && e.mag<7).map(element => {\n            return element.longitude\n        })\n        // middleLongitudes = middleLongitudes.map(e => e+=min(middleLongitudes))\n        let middleDepths = this.state.data.filter(e => e.mag>5 && e.mag<7).map(element => {\n            return element.depth\n        })\n        // middleDepths = middleDepths.map(e => e+=min(middleDepths))\n        let seriousLatitudes = this.state.data.filter(e => e.mag>7 && e.mag<8).map(element => {\n            return element.latitude\n        })\n        // seriousLatitudes = seriousLatitudes.map(e => e+=min(seriousLatitudes))\n        let seriousLongitudes = this.state.data.filter(e => e.mag>7 && e.mag<8).map(element => {\n            return element.longitude\n        })\n        // seriousLongitudes = seriousLongitudes.map(e => e+=min(seriousLongitudes))\n        let seriousDepths = this.state.data.filter(e => e.mag>7 && e.mag<8).map(element => {\n            return element.depth\n        })\n        // seriousDepths = seriousDepths.map(e => e+=min(seriousDepths))\n        // let mlatitudesScore = zscore(smallLatitudes)\n        // let mlongitudesScore = zscore(smallLongitudes)\n        // let mdepthsScore = zscore(smallDepths)\n        // let slatitudesScore = zscore(middleLatitudes)\n        // let slongitudesScore = zscore(middleLongitudes)\n        // let sdepthsScore = zscore(middleDepths)\n        // let blatitudesScore = zscore(seriousLatitudes)\n        // let blongitudesScore = zscore(seriousLongitudes)\n        // let bdepthsScore = zscore(seriousDepths)\n        let smlatitudesScore = smallLatitudes\n        let smlongitudesScore = smallLongitudes\n        let smdepthsScore = smallDepths\n        let mlatitudesScore = middleLatitudes\n        let mlongitudesScore = middleLongitudes\n        let mdepthsScore = middleDepths\n        let selatitudesScore = seriousLatitudes\n        let selongitudesScore = seriousLongitudes\n        let sedepthsScore = seriousDepths\n        // this.mLatitudeScore = mlatitudesScore.map(e => e-min(mlatitudesScore))\n        // this.mLongitudeScore = mlongitudesScore.map(e => e-min(mlongitudesScore))\n        // this.mDepthScore = mdepthsScore.map(e => e-min(mdepthsScore))\n        // this.sLatitudeScore = slatitudesScore.map(e => e-min(slatitudesScore))\n        // this.sLongitudeScore = slongitudesScore.map(e => e-min(slongitudesScore))\n        // this.sDepthScore = sdepthsScore.map(e => e-min(sdepthsScore))\n        // this.bLatitudeScore = blatitudesScore.map(e => e-min(blatitudesScore))\n        // this.bLongitudeScore = blongitudesScore.map(e => e-min(blongitudesScore))\n        // this.bDepthScore = bdepthsScore.map(e => e-min(bdepthsScore))\n        this.smLatitudeScore = smlatitudesScore\n        this.smLongitudeScore = smlongitudesScore\n        this.smDepthScore = smdepthsScore\n        this.mLatitudeScore = mlatitudesScore\n        this.mLongitudeScore = mlongitudesScore\n        this.mDepthScore = mdepthsScore\n        this.seLatitudeScore = selatitudesScore\n        this.seLongitudeScore = selongitudesScore\n        this.seDepthScore = sedepthsScore\n        console.log(smallDepths)\n    }\n    calculate = (latitude, longitude, depth) => {\n        for (let i = 0; i<11754; i++){\n            let small = Math.sqrt(\n                            Math.pow(this.smLatitudeScore[i]-latitude, 2)+\n                            Math.pow(this.smLongitudeScore[i]-longitude, 2)+\n                            Math.pow(this.smDepthScore[i]-depth, 2))\n            let middle = Math.sqrt(\n                            Math.pow(this.mLatitudeScore[i]-latitude, 2)+\n                            Math.pow(this.mLongitudeScore[i]-longitude, 2)+\n                            Math.pow(this.mDepthScore[i]-depth, 2))\n            let serious = Math.sqrt(\n                            Math.pow(this.seLatitudeScore[i]-latitude, 2)+\n                            Math.pow(this.seLongitudeScore[i]-longitude, 2)+\n                            Math.pow(this.seDepthScore[i]-depth, 2))\n            if(this.euklid.small > small) this.euklid.small = small\n            if(this.euklid.middle > middle) this.euklid.middle = middle\n            if(this.euklid.serious > serious) this.euklid.serious = serious \n        }\n        \n        this.setState({testEuklid: this.euklid, showModal: true}, console.log(this.state.testEuklid))\n        \n    }\n    createForm(){\n        return (\n            <>\n            <Form>\n                <Form.Group label=\"Latitude\">\n                    <Form.Input\n                    icon=\"feather\"\n                    name=\"latitude\"\n                    placeholder=\"Latitude\"\n                    position=\"append\" value={this.state.latitude} onChange={this.handleChange}\n                    />\n                </Form.Group>\n                <Form.Group label=\"Longitude\">\n                    <Form.Input\n                    icon=\"layers\"\n                    name=\"longitude\"\n                    placeholder=\"Longitude\"\n                    position=\"append\" value={this.state.longitude} onChange={this.handleChange}\n                    />\n                </Form.Group>\n                <Form.Group label=\"Depth\">\n                    <Form.Input\n                    icon=\"bookmark\"\n                    name=\"depth\"\n                    placeholder=\"Depth\"\n                    position=\"append\" value={this.state.depth} onChange={this.handleChange}\n                    />\n                </Form.Group>\n            </Form>\n            <Button color=\"primary\" style={{float: 'right'}} onClick={() => this.calculate(this.state.latitude, this.state.longitude, this.state.depth)}>Calculate</Button>\n            <ReactModal\n                isOpen={this.state.showModal}\n                onRequestClose={this.handleCloseModal}\n                style={modalStyles}\n                ariaHideApp={false}\n                contentLabel=\"Add Talker Modal\"\n                >\n                <TestDetail testEuklid={this.state.testEuklid}/>\n                <Button color=\"cyan\" className=\"button-close\" onClick={this.handleCloseModal}>Kapat</Button>\n            </ReactModal>\n            </>\n        )\n    }\n\n    \n    \n    render() {\n        return (\n            <>\n            {this.createForm()}\n            </>\n        )\n    }\n}\nexport default Test\nconst modalStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      width: '40vw',\n      height: '35vw'\n    }\n  };","import React, { Component } from 'react'\n\nimport { VictoryBar, \n         VictoryChart, \n         VictoryAxis, \n         VictoryTheme,\n         VictoryPie,\n        VictoryLine,\n        VictoryZoomContainer,\n        VictoryBrushContainer,\n    VictoryScatter } from 'victory';\nconst data = [\n    {quarter: 1, earnings: 13000},\n    {quarter: 2, earnings: 16500},\n    {quarter: 3, earnings: 14250},\n    {quarter: 4, earnings: 19000}\n  ];\nArray.prototype.groupBy = function(prop) {\nreturn this.reduce(function(groups, item) {\n    const val = item[prop]\n    groups[val] = groups[val] || []\n    groups[val].push(item)\n    return groups\n}, {})\n}\n\nclass Analytics extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             data: [],\n             locationBased: []\n        }\n    }\n    \n    static getDerivedStateFromProps = (props, state) => {\n        return props\n    }\n    componentDidMount = () => {\n        this.filterData()\n    }\n    componentDidUpdate = () => {\n\n    }\n    filterData = () => {\n        const { data } = this.state\n        console.log(data)\n        if(data){\n            const locationBasedGroup = data.groupBy('location');\n            console.log(locationBasedGroup)\n            const locationBased = Object.entries(locationBasedGroup).map(e => {\n                return {x: e[0], y: e[1].length}\n            })\n            console.log(locationBased)\n            this.setState({locationBased: locationBased})\n        }\n    }\n\n\n    handleZoom = (domain) => {\n        this.setState({selectedDomain: domain});\n      }\n    \n      handleBrush = (domain) => {\n        this.setState({zoomDomain: domain});\n      }\n\n    \n    render() {\n        const { locationBased } = this.state\n        return (\n            <>\n           <VictoryChart containerComponent={<VictoryZoomContainer/>}>\n            <VictoryScatter data={locationBased} />\n            </VictoryChart>\n       </>\n        )\n    }\n}\nexport default Analytics\n","import React, { Component } from 'react'\nimport './Homepage.scss'\nimport { Container, Page, Card, Nav, Grid } from 'tabler-react'\nimport \"tabler-react/dist/Tabler.css\";\nimport Service from '../service/Service'\nimport Earthquakes from './components/Earthquakes'\nimport Test from './components/Test';\nimport Analytics from './components/Analytics';\n\nclass Homepage extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             location: 'data',\n             data: []\n        }\n    }\n    route = location => {\n        this.setState({location: location})\n    }\n    componentDidMount = () => {\n        Service.fetchDataset().then(res=> {\n            const data = res.data.filter(e => e.location)\n            this.setState({data: data})\n        })\n    }\n    \n    render() {\n        const { location, data } = this.state\n        return (\n            <Container>\n                <Page>\n                    <Page.Header\n                    title=\"Data Mining Earthquake Task\"\n                    subTitle=\"...\"\n                    />\n                    <Nav>\n                        <Nav.Item icon=\"globe\" active={location === 'data'} onClick={() => this.route('data')}>Eartquake Data</Nav.Item>\n                        <Nav.Item icon=\"map\" active={location === 'test'} onClick={() => this.route('test')}>Test</Nav.Item>\n                        <Nav.Item icon=\"globe\" active={location === 'analytics'} onClick={() => this.route('analytics')}>Analytics</Nav.Item>\n                    </Nav>\n                    <Grid.Row cards deck>\n                    <Grid.Col md={10} offset={1} className=\"column\">\n                        <Card \n                        title=\"Eartquake Data\"\n                        className=\"mt-4\"\n                        body={\n                            location === 'data'\n                            ?\n                            <Earthquakes data={data}/>\n                            :\n                            location === 'test'\n                            ?\n                            <Test data={data}/>\n                            :\n                            location === 'analytics'\n                            ?\n                            <Analytics data={data}/>\n                            : ''\n                        }\n                        />\n                    </Grid.Col>\n                </Grid.Row>\n                </Page>\n            </Container>\n        )\n    }\n}\nexport default Homepage\n","import React from 'react';\nimport './App.css';\nimport Homepage from './pages/Homepage'\n\nfunction App() { return (<Homepage />) }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}